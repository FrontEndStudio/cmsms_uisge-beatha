// !!!!! This file is generated by gulp-iconfont-css (~ gulp iconfontBuild)
// !!!!! Only edit sass/templates/_iconfont.tmpl not sass/base/_iconfont.scss

/* ############################################################################
 * # fonticons
 * ############################################################################ */

/*

This file implements a custom icon font by using Sass Lists.

The $icons list can be filled by refering to the icon code like:

$icons: (
  icon-cmsms:  '\f101',
);

All icons included in $icons can be called like:

<i class="icon-cmsms">cmsms</i><br>

If you want to roll your own class names use the "icon-after" or "icon-before" like:

.cmsms-before {
  @include icon-before('icon-cmsms');
}

.cmsms-after {
  @include icon-after('icon-cmsms');
}

<i class="cmsms-before">cmsms</i><br>

Icons have a default icon-margin of .25em. You can override this with custom settings:

.add-custom-margin-before {
  @include icon-before('icon-cmsms', 1em);
}

.add-custom-margin-after {
  @include icon-after('icon-cmsms', 1em);
}

<i class="add-custom-margin-before "> ... extra margin ...</i><br>


The "icon-content" mixin can be used if you want to have full control.

.add-content-before {
  &::before {
    @extend %icon;
    @include icon-content('icon-cmsms');
    margin-right: 1em;
  }
}

.add-content-after {
  &::after {
    @extend %icon;
    @include icon-content('icon-cmsms');
    margin-left: 1em;
  }
}

Example:

<i class="add-content-before">add-content-before (i)</i><br>
<i class="add-content-after">add-content-after (i)</i><br>

Example:


  <i class="icon-angle-up">angle-up</i><br>

  <i class="icon-arrow-circle-down">arrow-circle-down</i><br>

  <i class="icon-arrow-circle-left">arrow-circle-left</i><br>

  <i class="icon-arrow-circle-right">arrow-circle-right</i><br>

  <i class="icon-arrow-circle-up">arrow-circle-up</i><br>

  <i class="icon-calendar-o">calendar-o</i><br>

  <i class="icon-calendar">calendar</i><br>

  <i class="icon-camera">camera</i><br>

  <i class="icon-comments">comments</i><br>

  <i class="icon-envelope-open-o">envelope-open-o</i><br>

  <i class="icon-envelope">envelope</i><br>

  <i class="icon-facebook2">facebook2</i><br>

  <i class="icon-feed">feed</i><br>

  <i class="icon-google-plus-square">google-plus-square</i><br>

  <i class="icon-google-plus">google-plus</i><br>

  <i class="icon-google-plus2">google-plus2</i><br>

  <i class="icon-google-plus3">google-plus3</i><br>

  <i class="icon-hand-o-down">hand-o-down</i><br>

  <i class="icon-hand-o-left">hand-o-left</i><br>

  <i class="icon-hand-o-right">hand-o-right</i><br>

  <i class="icon-hand-o-up">hand-o-up</i><br>

  <i class="icon-linkedin">linkedin</i><br>

  <i class="icon-linkedin1">linkedin1</i><br>

  <i class="icon-pinterest-square">pinterest-square</i><br>

  <i class="icon-pinterest">pinterest</i><br>

  <i class="icon-pinterest1">pinterest1</i><br>

  <i class="icon-rss2">rss2</i><br>

  <i class="icon-tag">tag</i><br>

  <i class="icon-tags">tags</i><br>

  <i class="icon-twitter">twitter</i><br>

  <i class="icon-youtube">youtube</i><br>

  <i class="icon-youtube1">youtube1</i><br>


*/

$default-icon-font-alpha: 'iconfont' !default;
$default-icon-font-margin: true !default;
$icon-margin: .25em;

/* ////////////////////////////////////////////////////////////////////////////
 * %icon
 * ///////////////////////////////////////////////////////////////////////// */

%icon {
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  vertical-align: middle;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
}

// sass-lint:disable force-pseudo-nesting

[class^='icon-']::before,
[class*='icon-']::before {

  @extend %icon;
  width: 0;
  font-family: var(--font-sans-serif);

  @if $default-icon-font-margin == true {
    margin-right: 0;
  }

  .fonts-loaded & {
    width: 1em;
    font-family: 'iconfont', var(--font-sans-serif);

    @if $default-icon-font-margin == true {
      margin-right: $icon-margin;
    }
  }

}

// sass-lint:enable force-pseudo-nesting

/// icons
/// @access public
/// @type List
/// @group config-icons
$icons: (

  icon-angle-up: '\EA01',

  icon-arrow-circle-down: '\EA02',

  icon-arrow-circle-left: '\EA03',

  icon-arrow-circle-right: '\EA04',

  icon-arrow-circle-up: '\EA05',

  icon-calendar-o: '\EA06',

  icon-calendar: '\EA07',

  icon-camera: '\EA08',

  icon-comments: '\EA09',

  icon-envelope-open-o: '\EA0A',

  icon-envelope: '\EA0B',

  icon-facebook2: '\EA0C',

  icon-feed: '\EA0D',

  icon-google-plus-square: '\EA0E',

  icon-google-plus: '\EA0F',

  icon-google-plus2: '\EA10',

  icon-google-plus3: '\EA11',

  icon-hand-o-down: '\EA12',

  icon-hand-o-left: '\EA13',

  icon-hand-o-right: '\EA14',

  icon-hand-o-up: '\EA15',

  icon-linkedin: '\EA16',

  icon-linkedin1: '\EA17',

  icon-pinterest-square: '\EA18',

  icon-pinterest: '\EA19',

  icon-pinterest1: '\EA1A',

  icon-rss2: '\EA1B',

  icon-tag: '\EA1C',

  icon-tags: '\EA1D',

  icon-twitter: '\EA1E',

  icon-youtube: '\EA1F',

  icon-youtube1: '\EA20',

);

/* ////////////////////////////////////////////////////////////////////////////
 * icon-content
 * ///////////////////////////////////////////////////////////////////////// */

/// icon-content
/// @access public
/// @param $icon-name
/// @require $icons
/// @group config-icons
/// @example scss - Usage
/// i { @include icon-content('icon-cmsms'); }
@mixin icon-content($icon-name) {
  content: '';

  .fonts-loaded & {
    width: 1em;
    font-family: 'iconfont', var(--font-sans-serif);
    content: map-get($icons, $icon-name);
  }
}

/* ////////////////////////////////////////////////////////////////////////////
 * icon-content-noload
 * ///////////////////////////////////////////////////////////////////////// */

/// icon-content-noload
/// @access public
/// @param $icon-name
/// @require $icons
/// @group config-icons
/// @example scss - Usage
/// i { @include icon-content-noload('icon-cmsms'); }
@mixin icon-content-noload($icon-name) {
  content: map-get($icons, $icon-name);
}

/* ////////////////////////////////////////////////////////////////////////////
 * icon-before
 * ///////////////////////////////////////////////////////////////////////// */

/// icon-before
/// @access public
/// @param $icon-name
/// @param $default-icon-font-margin [$icon-margin]
/// @group config-icons
/// @example scss - Usage
/// i { @include icon-before('icon-cmsms'); }
/// i { @include icon-before('icon-cmsms', 1em); }
@mixin icon-before($icon-name, $default-icon-font-margin: $icon-margin) {
  @extend %icon;
  width: 0;
  font-family: var(--font-sans-serif);

  .fonts-loaded {
    width: 1em;
    font-family: 'iconfont', var(--font-sans-serif);
  }

  &::before {

    margin-left: 0;

    @if $default-icon-font-margin == true {
      margin-right: 0;
    }

    content: '';

    .fonts-loaded & {
      @if $default-icon-font-margin == true {
        margin-right: $default-icon-font-margin;
      }
      content: map-get($icons, $icon-name);
    }

  }
}

/* ////////////////////////////////////////////////////////////////////////////
 * icon-after
 * ///////////////////////////////////////////////////////////////////////// */

/// icon-after
/// @access public
/// @param $icon-name
/// @param $default-icon-font-margin [$icon-margin]
/// @group config-icons
/// @example scss - Usage
/// i { @include icon-after('icon-cmsms'); }
/// i { @include icon-after('icon-cmsms', 1em); }
@mixin icon-after($icon-name, $default-icon-font-margin: $icon-margin) {
  @extend %icon;
  width: 0;
  font-family: var(--font-sans-serif);

  .fonts-loaded {
    width: 1em;
    font-family: 'iconfont', var(--font-sans-serif);
  }

  &::after {

    @if $default-icon-font-margin == true {
      margin-left: 0;
    }

    margin-right: 0;

    content: '';

    .fonts-loaded & {
      @if $default-icon-font-margin == true {
        margin-left: $default-icon-font-margin;
      }

      content: map-get($icons, $icon-name);
    }

  }
}

/* ////////////////////////////////////////////////////////////////////////////
 * loop over the $icons list
 * ///////////////////////////////////////////////////////////////////////// */

// sass-lint:disable force-pseudo-nesting

@each $icon-name, $icon-value in $icons {
  .#{$icon-name}::before {
    content: '';

    .fonts-loaded & {
      content: $icon-value;
    }

  }
}

// sass-lint:enable force-pseudo-nesting

//
// EOF
//