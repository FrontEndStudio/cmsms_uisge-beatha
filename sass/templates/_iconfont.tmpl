// !!!!! This file is generated by gulp-iconfont-css (~ gulp iconfontBuild)
// !!!!! Only edit sass/templates/_iconfont.tmpl not sass/base/_iconfont.scss

/* ############################################################################
 * # fonticons
 * ############################################################################ */

/*

This file implements a custom icon font by using Sass Lists.

The $icons list can be filled by refering to the icon code like:

$icons: (
  icon-cmsms:  '\f101',
);

All icons included in $icons can be called like:

<i class="icon-cmsms">cmsms</i><br>

If you want to roll your own class names use the "icon-after" or "icon-before" like:

.cmsms-before {
  @include icon-before('icon-cmsms');
}

.cmsms-after {
  @include icon-after('icon-cmsms');
}

<i class="cmsms-before">cmsms</i><br>

Icons have a default icon-margin of .25em. You can override this with custom settings:

.add-custom-margin-before {
  @include icon-before('icon-cmsms', 1em);
}

.add-custom-margin-after {
  @include icon-after('icon-cmsms', 1em);
}

<i class="add-custom-margin-before "> ... extra margin ...</i><br>


The "icon-content" mixin can be used if you want to have full control.

.add-content-before {
  &::before {
    @extend %icon;
    @include icon-content('icon-cmsms');
    margin-right: 1em;
  }
}

.add-content-after {
  &::after {
    @extend %icon;
    @include icon-content('icon-cmsms');
    margin-left: 1em;
  }
}

Example:

<i class="add-content-before">add-content-before (i)</i><br>
<i class="add-content-after">add-content-after (i)</i><br>

Example:

<% _.each(glyphs, function(glyph) { %>
  <i class="icon-<%= glyph.name %>"><%= glyph.name %></i><br>
<% }); %>

*/

$default-icon-font-alpha: 'iconfont' !default;
$default-icon-font-margin: true !default;
$icon-margin: .25em;

/* ////////////////////////////////////////////////////////////////////////////
 * %icon
 * ///////////////////////////////////////////////////////////////////////// */

%icon {
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  vertical-align: middle;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
}

// sass-lint:disable force-pseudo-nesting

[class^='icon-']::before,
[class*='icon-']::before {

  @extend %icon;
  width: 0;
  font-family: var(--font-sans-serif);

  @if $default-icon-font-margin == true {
    margin-right: 0;
  }

  .fonts-loaded & {
    width: 1em;
    font-family: 'iconfont', var(--font-sans-serif);

    @if $default-icon-font-margin == true {
      margin-right: $icon-margin;
    }
  }

}

// sass-lint:enable force-pseudo-nesting

/// icons
/// @access public
/// @type List
/// @group config-icons
$icons: (
<% _.each(glyphs, function(glyph) { %>
  icon-<%= glyph.name %>: '\<%= glyph.unicode[0].charCodeAt(0).toString(16).toUpperCase() %>',
<% }); %>
);

/* ////////////////////////////////////////////////////////////////////////////
 * icon-content
 * ///////////////////////////////////////////////////////////////////////// */

/// icon-content
/// @access public
/// @param $icon-name
/// @require $icons
/// @group config-icons
/// @example scss - Usage
/// i { @include icon-content('icon-cmsms'); }
@mixin icon-content($icon-name) {
  content: '';

  .fonts-loaded & {
    width: 1em;
    font-family: 'iconfont', var(--font-sans-serif);
    content: map-get($icons, $icon-name);
  }
}

/* ////////////////////////////////////////////////////////////////////////////
 * icon-content-noload
 * ///////////////////////////////////////////////////////////////////////// */

/// icon-content-noload
/// @access public
/// @param $icon-name
/// @require $icons
/// @group config-icons
/// @example scss - Usage
/// i { @include icon-content-noload('icon-cmsms'); }
@mixin icon-content-noload($icon-name) {
  content: map-get($icons, $icon-name);
}

/* ////////////////////////////////////////////////////////////////////////////
 * icon-before
 * ///////////////////////////////////////////////////////////////////////// */

/// icon-before
/// @access public
/// @param $icon-name
/// @param $default-icon-font-margin [$icon-margin]
/// @group config-icons
/// @example scss - Usage
/// i { @include icon-before('icon-cmsms'); }
/// i { @include icon-before('icon-cmsms', 1em); }
@mixin icon-before($icon-name, $default-icon-font-margin: $icon-margin) {
  @extend %icon;
  width: 0;
  font-family: var(--font-sans-serif);

  .fonts-loaded {
    width: 1em;
    font-family: 'iconfont', var(--font-sans-serif);
  }

  &::before {

    margin-left: 0;

    @if $default-icon-font-margin == true {
      margin-right: 0;
    }

    content: '';

    .fonts-loaded & {
      @if $default-icon-font-margin == true {
        margin-right: $default-icon-font-margin;
      }
      content: map-get($icons, $icon-name);
    }

  }
}

/* ////////////////////////////////////////////////////////////////////////////
 * icon-after
 * ///////////////////////////////////////////////////////////////////////// */

/// icon-after
/// @access public
/// @param $icon-name
/// @param $default-icon-font-margin [$icon-margin]
/// @group config-icons
/// @example scss - Usage
/// i { @include icon-after('icon-cmsms'); }
/// i { @include icon-after('icon-cmsms', 1em); }
@mixin icon-after($icon-name, $default-icon-font-margin: $icon-margin) {
  @extend %icon;
  width: 0;
  font-family: var(--font-sans-serif);

  .fonts-loaded {
    width: 1em;
    font-family: 'iconfont', var(--font-sans-serif);
  }

  &::after {

    @if $default-icon-font-margin == true {
      margin-left: 0;
    }

    margin-right: 0;

    content: '';

    .fonts-loaded & {
      @if $default-icon-font-margin == true {
        margin-left: $default-icon-font-margin;
      }

      content: map-get($icons, $icon-name);
    }

  }
}

/* ////////////////////////////////////////////////////////////////////////////
 * loop over the $icons list
 * ///////////////////////////////////////////////////////////////////////// */

// sass-lint:disable force-pseudo-nesting

@each $icon-name, $icon-value in $icons {
  .#{$icon-name}::before {
    content: '';

    .fonts-loaded & {
      content: $icon-value;
    }

  }
}

// sass-lint:enable force-pseudo-nesting

//
// EOF
//
<%
// preserve newline
%>
