{"version":3,"sources":["dyscrollup.js"],"names":["dyscrollup","btnID","option","showafter","scrolldelay","position","image","shape","width","height","extendSource","source","defaults","property","hasOwnProperty","init","self","this","createBtn","onscroll","onclick","btn","document","createElement","setAttribute","body","appendChild","getElementById","style","zIndex","cursor","display","bottom","left","right","length","background","backgroundColor","color","textAlign","fontSize","innerHTML","userSelect","msUserSelect","webkitUserSelect","borderRadius","scrollTop","documentElement","Logo","headerColor","querySelector","window","fadeIn","className","classList","contains","remove","add","fadeOut","addEventListener","e","preventDefault","animate","element","distance","intervalTimeout","travel","Number","intervalfn","setInterval","clearInterval"],"mappings":";;;;;;;AAcA,IAAAA,WAAA,CAEAC,MAAA,iBAEAC,OAAA,CACAC,UAAA,IACAC,YAAA,IACAC,SAAA,QACAC,MAAA,GACAC,MAAA,SACAC,MAAA,GACAC,OAAA,IASAC,aAAA,SAAAC,EAAAC,GACA,IAAAC,EACA,IAAAA,KAAAD,GACA,IAAAD,EAAAG,eAAAD,KACAF,EAAAE,GAAAD,EAAAC,IAGA,OAAAF,GAiBAI,KAAA,SAAAb,GACA,IAAAc,EAAAC,UACA,IAAAf,IACAc,EAAAd,OAAAc,EAAAN,aAAAR,EAAAc,EAAAd,SAEAc,EAAAE,YACAF,EAAAG,WACAH,EAAAI,WAKAF,UAAA,WACA,IAAAG,EAAAL,EAAAC,KAcA,QAZAI,EAAAC,SAAAC,cAAA,QACAC,aAAA,KAAAR,EAAAf,OACAqB,SAAAG,KAAAC,YAAAL,IAEAA,EAAAC,SAAAK,eAAAX,EAAAf,QAEA2B,MAAAC,OAAA,OACAR,EAAAO,MAAAvB,SAAA,QACAgB,EAAAO,MAAAE,OAAA,UACAT,EAAAO,MAAAG,QAAA,OACAV,EAAAO,MAAAI,OAAA,OAEAhB,EAAAd,OAAAG,UACA,IAAA,OACAgB,EAAAO,MAAAK,KAAA,OACA,MACA,IAAA,QACAZ,EAAAO,MAAAM,MAAA,OAIA,EAAAlB,EAAAd,OAAAI,MAAA6B,OACAd,EAAAO,MAAAQ,WAAA,OAAApB,EAAAd,OAAAI,MAAA,6BAKAe,EAAAO,MAAAS,gBAAA,gBACAhB,EAAAO,MAAAU,MAAA,OACAjB,EAAAO,MAAAW,UAAA,SACAlB,EAAAO,MAAAY,SAAA,OACAnB,EAAAoB,UAAA,UACApB,EAAAO,MAAAc,WAAA,OACArB,EAAAO,MAAAe,aAAA,OACAtB,EAAAO,MAAAgB,iBAAA,QAGA,WAAA5B,EAAAd,OAAAK,QACAc,EAAAO,MAAAiB,aAAA,OAGAxB,EAAAO,MAAApB,MAAAQ,EAAAd,OAAAM,MAAA,KACAa,EAAAO,MAAAnB,OAAAO,EAAAd,OAAAO,OAAA,KAEAa,SAAAG,KAAAqB,UAAA9B,EAAAd,OAAAC,WAAAmB,SAAAyB,gBAAAD,UAAA9B,EAAAd,OAAAC,UACAkB,EAAAO,MAAAG,QAAA,QAGAV,EAAAO,MAAAG,QAAA,QAMAZ,SAAA,WACA,IAAAH,EAAAC,KAAAI,EAAAC,SAAAK,eAAAX,EAAAf,OACA+C,EAAA1B,SAAAK,eAAA,eACAsB,EAAA3B,SAAA4B,cAAA,iBACAC,OAAAhC,SAAA,WACAG,SAAAG,KAAAqB,UAAA9B,EAAAd,OAAAC,WAAAmB,SAAAyB,gBAAAD,UAAA9B,EAAAd,OAAAC,WAEA,SAAAkB,EAAAO,MAAAG,SACAf,EAAAoC,OAAA/B,GAEA2B,EAAAK,UAAA,YAGAhC,EAAAiC,UAAAC,SAAA,8BACAlC,EAAAiC,UAAAE,OAAA,gBACAP,EAAAK,UAAAE,OAAA,sBACAP,EAAAK,UAAAG,IAAA,kBAKA,SAAApC,EAAAO,MAAAG,SACAf,EAAA0C,QAAArC,GAGAA,EAAAiC,UAAAE,OAAA,gBACAR,EAAAK,UAAA,YACAJ,EAAAK,UAAAE,OAAA,eACAP,EAAAK,UAAAG,IAAA,yBAOArC,QAAA,WACA,IAAAJ,EAAAC,KAAAI,EAAAC,SAAAK,eAAAX,EAAAf,OACAoB,EAAAsC,iBAAA,QAAA,SAAAC,GAMA,OALAA,EAAAC,iBACAxC,EAAAiC,UAAAC,SAAA,kBACAvC,EAAA8C,UACAzC,EAAAiC,UAAAG,IAAA,kBAEA,KAOAL,OAAA,SAAAW,GACAA,EAAAnC,MAAAG,QAAA,SAMA2B,QAAA,SAAAK,GACAA,EAAAnC,MAAAG,QAAA,QAKA+B,QAAA,WACA,IAAA9C,EAAAC,KAEAI,EAAAC,SAAAK,eAAAX,EAAAf,OAEA+D,EAAA1C,SAAAG,KAAAqB,WAAAxB,SAAAyB,gBAAAD,UAIAmB,EAAAjD,EAAAd,OAAAE,YAFA,GAIA8D,EAAAC,OAAAH,EAAAC,EAAAjD,EAAAd,OAAAE,aAGA6D,EAAA,IACAA,EAAA,EACAC,EAAAF,GAGA,IAAAI,EAAAC,YACA,WAEAhD,EAAAiC,UAAAG,IAAA,4BACAO,GAAAE,EACA5C,SAAAG,KAAAqB,UAAAkB,GACA1C,SAAAyB,gBAAAD,UAAAkB,IAEA,IACAM,cAAAF,GACA/C,EAAAiC,UAAAE,OAAA,8BAVAS","file":"dyscrollup.js","sourcesContent":["/*!\n * dyScrollUpJS is a JavaScript plugin to create a button to scroll back\n * to the top of the page.\n *\n * Author: Yusuf Shakeel\n * https://github.com/yusufshakeel\n * https://www.dyclassroom.com/dyscrollupjs/documentation\n * GitHub Link: https://github.com/yusufshakeel/dyScrollUpJS\n *\n * MIT License\n * Copyright (c) 2016 Yusuf Shakeel\n *\n * Date: 2015-03-21 Saturday\n */\nvar dyscrollup = {\n    // ID of the button\n    btnID: 'dyscrollup-btn',\n    // Default options\n    option: {\n        showafter: 300,\n        scrolldelay: 500,\n        position: 'right',\n        image: \"\",\n        shape: 'circle',\n        width: 32,\n        height: 32\n    },\n    /**\n     * This function will extend 'source' object with 'defaults' object.\n     *\n     * @param source    This is the source object\n     * @param defaults  This is the default object\n     * @returns {object}\n     */\n    extendSource: function (source, defaults) {\n        var property;\n        for (property in defaults) {\n            if (source.hasOwnProperty(property) === false) {\n                source[property] = defaults[property];\n            }\n        }\n        return source;\n    },\n    /**\n     * This function will configure and initialize the button.\n     *\n     * option = {\n     *  showafter : \"integer\"   // (optional) default: 300, show the button after scolling X pixels down.\n     *  scrolldelay : \"integer\" // (optional) default: 500, delay the scrolling up action in milliseconds\n     *  position : \"string\"     // (optional) values: \"left|right\" default: \"right\"\n     *  image : \"string\"        // (optional) values: \"path of the image\" default: \"\"\n     *  shape : \"string\"        // (optional) values: \"other|circle\" default: \"circle\"\n     *  width : \"integer\"       // (optional) default: 32\n     *  height : \"integer\"      // (optional) default: 32\n     * }\n     *\n     * @param option     User preferences\n     */\n    init: function (option) {\n        var self = this;\n        if (typeof option !== \"undefined\") {\n            self.option = self.extendSource(option, self.option);\n        }\n        self.createBtn();\n        self.onscroll();\n        self.onclick();\n    },\n    /**\n     * This will create the button.\n     */\n    createBtn: function () {\n        var self = this, btn;\n        // Add the button\n        btn = document.createElement('div');\n        btn.setAttribute('id', self.btnID);\n        document.body.appendChild(btn);\n        // Now get the button by id\n        btn = document.getElementById(self.btnID);\n        // Set the common style\n        btn.style.zIndex = 999999;\n        btn.style.position = 'fixed';\n        btn.style.cursor = 'pointer';\n        btn.style.display = 'none';\n        btn.style.bottom = '32px';\n        // Set position\n        switch (self.option.position) {\n            case 'left':\n                btn.style.left = '32px';\n                break;\n            case 'right':\n                btn.style.right = '32px';\n                break;\n        }\n        // Set image\n        if (self.option.image.length > 0) {\n            btn.style.background = 'url(' + self.option.image + ') center center no-repeat';\n        }\n        else {\n            // If image not defined\n            // then, create default button\n            btn.style.backgroundColor = 'rgba(0,0,0,1)';\n            btn.style.color = '#fff';\n            btn.style.textAlign = 'center';\n            btn.style.fontSize = '20px';\n            btn.innerHTML = '&#8593;';\n            btn.style.userSelect = 'none';\n            btn.style.msUserSelect = 'none';\n            btn.style.webkitUserSelect = 'none';\n        }\n        // Set shape\n        if (self.option.shape === 'circle') {\n            btn.style.borderRadius = '50%';\n        }\n        // Set dimension\n        btn.style.width = self.option.width + 'px';\n        btn.style.height = self.option.height + 'px';\n        // Show the button if required\n        if (document.body.scrollTop > self.option.showafter || document.documentElement.scrollTop > self.option.showafter) {\n            btn.style.display = 'block';\n        }\n        else {\n            btn.style.display = 'none';\n        }\n    },\n    /**\n     * This will scroll the page back to top.\n     */\n    onscroll: function () {\n        var self = this, btn = document.getElementById(self.btnID);\n        var Logo = document.getElementById(\"header_logo\"); // logo\n        var headerColor = document.querySelector('#navbarHeader');\n        window.onscroll = function () {\n            if (document.body.scrollTop > self.option.showafter || document.documentElement.scrollTop > self.option.showafter) {\n                // Show the button if not yet visible\n                if (btn.style.display === 'none') {\n                    self.fadeIn(btn);\n                }\n                Logo.className = 'smallLogo'; // resize logo 2 small\n                // If page is not scrolling back to the top after clicking\n                // the dyscrollup-btn then remove the click lock\n                if (!btn.classList.contains('dyscrollup-btn-scrolling')) {\n                    btn.classList.remove('click-locked');\n                    headerColor.classList.remove(\"navbar-transparent\");\n                    headerColor.classList.add(\"bg-gradient\");\n                }\n            }\n            else {\n                // Hide the button when approaching the top\n                if (btn.style.display !== 'none') {\n                    self.fadeOut(btn);\n                }\n                // Remove the click lock\n                btn.classList.remove('click-locked');\n                Logo.className = 'largeLogo'; // resize logo 2 large\n                headerColor.classList.remove(\"bg-gradient\");\n                headerColor.classList.add(\"navbar-transparent\");\n            }\n        };\n    },\n    /**\n     * This handles the click event.\n     */\n    onclick: function () {\n        var self = this, btn = document.getElementById(self.btnID);\n        btn.addEventListener('click', function (e) {\n            e.preventDefault();\n            if (!btn.classList.contains('click-locked')) {\n                self.animate();\n                btn.classList.add('click-locked');\n            }\n            return false;\n        });\n    },\n    /**\n     * This will fadeIn the element.\n     * @param element\n     */\n    fadeIn: function (element) {\n        element.style.display = 'block';\n    },\n    /**\n     * This will fadeOut the element.\n     * @param element\n     */\n    fadeOut: function (element) {\n        element.style.display = 'none';\n    },\n    /**\n     * This will animate the scroll up.\n     */\n    animate: function () {\n        var self = this;\n        // Get the button\n        var btn = document.getElementById(self.btnID);\n        // Find the distance that needs to be traversed to reach back to the top\n        var distance = document.body.scrollTop || document.documentElement.scrollTop;\n        // Divide the journey into N parts\n        var divider = 50;\n        // Compute the time interval for each N parts\n        var intervalTimeout = self.option.scrolldelay / divider;\n        // Compute the distance to travel for each N parts\n        var travel = Number((distance * intervalTimeout) / self.option.scrolldelay);\n        // If the time interval for each N parts is less than 1 ms\n        // then, jump straight to top\n        if (intervalTimeout < 1) {\n            intervalTimeout = 1;\n            travel = distance;\n        }\n        // Set the interval\n        var intervalfn = setInterval(scrollUpdate, intervalTimeout);\n        function scrollUpdate() {\n            // Still scrolling\n            btn.classList.add('dyscrollup-btn-scrolling');\n            distance -= travel;\n            document.body.scrollTop = distance;\n            document.documentElement.scrollTop = distance;\n            // Scrolling complete\n            if (distance <= 0) {\n                clearInterval(intervalfn);\n                btn.classList.remove('dyscrollup-btn-scrolling');\n            }\n        }\n    }\n};\n"]}